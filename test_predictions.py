#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –ø—Ä–æ–≥–Ω–æ–∑–æ–≤ –±–µ–∑ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from services.ai_predictions import AIPredictionService
from models import PlanetPosition

async def test_predictions():
    """–¢–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–æ–≥–Ω–æ–∑–æ–≤"""
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–†–û–ì–ù–û–ó–û–í")
    print("=" * 40)
    
    # –°–æ–∑–¥–∞–µ–º —Å–µ—Ä–≤–∏—Å
    service = AIPredictionService()
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –ø–ª–∞–Ω–µ—Ç—ã
    test_planets = {
        '–°–æ–ª–Ω—Ü–µ': PlanetPosition(sign='–õ–µ–≤', degree=15.5),
        '–õ—É–Ω–∞': PlanetPosition(sign='–†–∞–∫', degree=22.3),
    }
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–Ω—ã–µ —Ç–∏–ø—ã –ø—Ä–æ–≥–Ω–æ–∑–æ–≤
    for pred_type in ['—Å–µ–≥–æ–¥–Ω—è', '–Ω–µ–¥–µ–ª—è', '–º–µ—Å—è—Ü']:
        print(f"\nüìÖ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–≥–Ω–æ–∑: {pred_type}")
        
        try:
            result = await service.generate_prediction(
                user_planets=test_planets,
                prediction_type=pred_type,
                owner_name="–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
            )
            
            if result and len(result) > 50:
                print(f"‚úÖ –ü—Ä–æ–≥–Ω–æ–∑ —Å–æ–∑–¥–∞–Ω! –î–ª–∏–Ω–∞: {len(result)} —Å–∏–º–≤–æ–ª–æ–≤")
                print(f"–ù–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å: {result[:100]}...")
            else:
                print(f"‚ùå –ö–æ—Ä–æ—Ç–∫–∏–π –∏–ª–∏ –ø—É—Å—Ç–æ–π –ø—Ä–æ–≥–Ω–æ–∑: {result}")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print("\nüéØ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")

if __name__ == "__main__":
    asyncio.run(test_predictions()) 