#!/bin/bash

# ==============================================
# SOLARBALANCE BOT - –°–ö–†–ò–ü–¢ –î–ï–ü–õ–û–Ø –ù–ê –°–ï–†–í–ï–†
# ==============================================

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ

echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –¥–µ–ø–ª–æ–π SolarBalance –±–æ—Ç–∞..."

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Ü–≤–µ—Ç–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
print_status() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Python –≤–µ—Ä—Å–∏–∏
check_python() {
    print_status "–ü—Ä–æ–≤–µ—Ä–∫–∞ Python..."
    
    if ! command -v python3 &> /dev/null; then
        print_error "Python3 –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Python 3.9 –∏–ª–∏ –≤—ã—à–µ."
        exit 1
    fi
    
    PYTHON_VERSION=$(python3 -c 'import sys; print(".".join(map(str, sys.version_info[:2])))')
    print_status "–ù–∞–π–¥–µ–Ω Python $PYTHON_VERSION"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏
    if [[ $(echo "$PYTHON_VERSION < 3.9" | bc -l) -eq 1 ]]; then
        print_error "–¢—Ä–µ–±—É–µ—Ç—Å—è Python 3.9 –∏–ª–∏ –≤—ã—à–µ. –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è: $PYTHON_VERSION"
        exit 1
    fi
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
install_system_deps() {
    print_status "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É
    if [[ "$OSTYPE" == "linux-gnu"* ]]; then
        # Ubuntu/Debian
        if command -v apt-get &> /dev/null; then
            print_status "–û–±–Ω–æ–≤–ª—è–µ–º –ø–∞–∫–µ—Ç—ã Ubuntu/Debian..."
            sudo apt-get update
            sudo apt-get install -y python3-pip python3-venv python3-dev build-essential
            sudo apt-get install -y libffi-dev libssl-dev
            print_status "–°–∏—Å—Ç–µ–º–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
        # CentOS/RHEL
        elif command -v yum &> /dev/null; then
            print_status "–û–±–Ω–æ–≤–ª—è–µ–º –ø–∞–∫–µ—Ç—ã CentOS/RHEL..."
            sudo yum update -y
            sudo yum install -y python3-pip python3-devel gcc openssl-devel libffi-devel
            print_status "–°–∏—Å—Ç–µ–º–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
        fi
    elif [[ "$OSTYPE" == "darwin"* ]]; then
        # macOS
        print_status "–û–±–Ω–∞—Ä—É–∂–µ–Ω macOS"
        if command -v brew &> /dev/null; then
            brew install python3
            print_status "Python3 —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —á–µ—Ä–µ–∑ Homebrew"
        else
            print_warning "Homebrew –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ –¥–ª—è —É–ø—Ä–æ—â–µ–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π."
        fi
    fi
}

# –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
setup_venv() {
    print_status "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    
    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if [ -d "venv" ]; then
        print_warning "–£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ..."
        rm -rf venv
    fi
    
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
    python3 -m venv venv
    print_status "–í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ"
    
    # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –æ–∫—Ä—É–∂–µ–Ω–∏–µ
    source venv/bin/activate
    print_status "–í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ"
    
    # –û–±–Ω–æ–≤–ª—è–µ–º pip
    pip install --upgrade pip setuptools wheel
    print_status "pip –æ–±–Ω–æ–≤–ª–µ–Ω"
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
install_dependencies() {
    print_status "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    
    # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –æ–∫—Ä—É–∂–µ–Ω–∏–µ
    source venv/bin/activate
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    if [ -f "requirements-prod.txt" ]; then
        pip install -r requirements-prod.txt
        print_status "–ü—Ä–æ–¥–∞–∫—à–µ–Ω –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    else
        print_error "–§–∞–π–ª requirements-prod.txt –Ω–µ –Ω–∞–π–¥–µ–Ω"
        exit 1
    fi
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
setup_config() {
    print_status "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ .env —Ñ–∞–π–ª–∞
    if [ ! -f ".env" ]; then
        if [ -f "env.example" ]; then
            cp env.example .env
            print_warning "–°–æ–∑–¥–∞–Ω .env —Ñ–∞–π–ª –∏–∑ –ø—Ä–∏–º–µ—Ä–∞. –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ –µ–≥–æ!"
            print_warning "–§–∞–π–ª .env —Å–æ–¥–µ—Ä–∂–∏—Ç –≤–∞–∂–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞."
        else
            print_error "–§–∞–π–ª env.example –Ω–µ –Ω–∞–π–¥–µ–Ω"
            exit 1
        fi
    else
        print_status ".env —Ñ–∞–π–ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    fi
}

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
create_directories() {
    print_status "–°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
    
    mkdir -p logs
    mkdir -p assets
    mkdir -p pics
    mkdir -p pictures
    
    print_status "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ —ç—Ñ–µ–º–µ—Ä–∏–¥
check_ephemeris() {
    print_status "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ —ç—Ñ–µ–º–µ—Ä–∏–¥ Swiss Ephemeris..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–æ–≤ —ç—Ñ–µ–º–µ—Ä–∏–¥
    if ls *.bsp 1> /dev/null 2>&1; then
        print_status "–§–∞–π–ª—ã —ç—Ñ–µ–º–µ—Ä–∏–¥ –Ω–∞–π–¥–µ–Ω—ã"
    else
        print_warning "–§–∞–π–ª—ã —ç—Ñ–µ–º–µ—Ä–∏–¥ Swiss Ephemeris –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
        print_warning "–°–∫–∞—á–∞–π—Ç–µ —Ñ–∞–π–ª—ã —ç—Ñ–µ–º–µ—Ä–∏–¥ —Å https://www.astro.com/swisseph/ephe/"
        print_warning "–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Å–∫–∞—á–∞—Ç—å: de421.bsp, de422.bsp"
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
validate_config() {
    print_status "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
    
    source venv/bin/activate
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–ø–æ—Ä—Ç—ã
    if python3 -c "import config; print('Config OK')" 2>/dev/null; then
        print_status "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞"
    else
        print_error "–û—à–∏–±–∫–∞ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    if python3 -c "
import os
from dotenv import load_dotenv
load_dotenv()

required_vars = ['BOT_TOKEN', 'ADMIN_IDS']
missing_vars = []

for var in required_vars:
    if not os.getenv(var):
        missing_vars.append(var)

if missing_vars:
    print(f'–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ: {missing_vars}')
    exit(1)
else:
    print('–í—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã')
"; then
        print_status "–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
    else
        print_error "–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è"
        print_error "–û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ .env —Ñ–∞–π–ª –∏ —É–∫–∞–∂–∏—Ç–µ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è"
        exit 1
    fi
}

# –°–æ–∑–¥–∞–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–∞
create_systemd_service() {
    print_status "–°–æ–∑–¥–∞–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–∞..."
    
    CURRENT_DIR=$(pwd)
    USER=$(whoami)
    
    cat > solarbalance.service << EOF
[Unit]
Description=SolarBalance Astrology Telegram Bot
After=network.target

[Service]
Type=simple
User=$USER
WorkingDirectory=$CURRENT_DIR
Environment=PATH=$CURRENT_DIR/venv/bin
ExecStart=$CURRENT_DIR/venv/bin/python $CURRENT_DIR/main.py
Restart=always
RestartSec=10
StandardOutput=journal
StandardError=journal

[Install]
WantedBy=multi-user.target
EOF
    
    print_status "–§–∞–π–ª systemd —Å–µ—Ä–≤–∏—Å–∞ —Å–æ–∑–¥–∞–Ω: solarbalance.service"
    print_warning "–î–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–µ—Ä–≤–∏—Å–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"
    print_warning "sudo cp solarbalance.service /etc/systemd/system/"
    print_warning "sudo systemctl daemon-reload"
    print_warning "sudo systemctl enable solarbalance"
    print_warning "sudo systemctl start solarbalance"
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
test_bot() {
    print_status "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–æ—Ç–∞..."
    
    source venv/bin/activate
    
    # –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–æ–≤
    if python3 -c "
import sys
sys.path.insert(0, '.')
try:
    from config import Config
    from database import DatabaseManager
    from main import main
    print('‚úÖ –í—Å–µ –º–æ–¥—É–ª–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä—É—é—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ')
except Exception as e:
    print(f'‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}')
    sys.exit(1)
"; then
        print_status "–¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω"
    else
        print_error "–¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–æ–≤ –Ω–µ –ø—Ä–æ–π–¥–µ–Ω"
        exit 1
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo -e "${BLUE}================================${NC}"
    echo -e "${BLUE}  SOLARBALANCE BOT DEPLOYMENT   ${NC}"
    echo -e "${BLUE}================================${NC}"
    echo ""
    
    check_python
    install_system_deps
    setup_venv
    install_dependencies
    setup_config
    create_directories
    check_ephemeris
    validate_config
    create_systemd_service
    test_bot
    
    echo ""
    echo -e "${GREEN}üéâ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!${NC}"
    echo ""
    echo -e "${YELLOW}–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:${NC}"
    echo "1. –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ .env —Ñ–∞–π–ª —Å –≤–∞—à–∏–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏"
    echo "2. –°–∫–∞—á–∞–π—Ç–µ —Ñ–∞–π–ª—ã —ç—Ñ–µ–º–µ—Ä–∏–¥ Swiss Ephemeris (*.bsp)"
    echo "3. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ systemd —Å–µ—Ä–≤–∏—Å (–∫–æ–º–∞–Ω–¥—ã –≤—ã—à–µ)"
    echo "4. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞: sudo systemctl start solarbalance"
    echo "5. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å: sudo systemctl status solarbalance"
    echo ""
    echo -e "${BLUE}–î–ª—è —Ä—É—á–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞:${NC}"
    echo "source venv/bin/activate && python main.py"
    echo ""
    echo -e "${GREEN}–£–¥–∞—á–Ω–æ–≥–æ –¥–µ–ø–ª–æ—è! üöÄ${NC}"
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main "$@" 