#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç fallback –ø—Ä–æ–≥–Ω–æ–∑–æ–≤"""

import sys
import os
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from services.ai_predictions import AIPredictionService

def test_fallback():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º fallback –ø—Ä–æ–≥–Ω–æ–∑—ã"""
    print("üß™ –¢–ï–°–¢ FALLBACK –ü–†–û–ì–ù–û–ó–û–í")
    print("=" * 40)
    
    service = AIPredictionService()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–≥–Ω–æ–∑—ã
    for pred_type in ['—Å–µ–≥–æ–¥–Ω—è', '–Ω–µ–¥–µ–ª—è', '–º–µ—Å—è—Ü']:
        print(f"\nüìÖ –¢–µ—Å—Ç–∏—Ä—É–µ–º: {pred_type}")
        
        try:
            result = service._generate_fallback_prediction(pred_type, "–¢–µ—Å—Ç")
            if result and len(result) > 100:
                print(f"‚úÖ –ü—Ä–æ–≥–Ω–æ–∑ —Å–æ–∑–¥–∞–Ω! –î–ª–∏–Ω–∞: {len(result)} —Å–∏–º–≤–æ–ª–æ–≤")
                print(f"–ù–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å: {result[:80]}...")
            else:
                print(f"‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å –ø—Ä–æ–≥–Ω–æ–∑–æ–º: {result}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print("\nüéØ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")

if __name__ == "__main__":
    test_fallback() 