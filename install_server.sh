#!/bin/bash

# üöÄ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ SolarBalance –Ω–∞ —Å–µ—Ä–≤–µ—Ä
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./install_server.sh

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ü–≤–µ—Ç–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞
print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
check_sudo() {
    if [[ $EUID -ne 0 ]]; then
        print_error "–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è —Å –ø—Ä–∞–≤–∞–º–∏ root (sudo)"
        exit 1
    fi
}

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –û–°
detect_os() {
    if [[ -f /etc/os-release ]]; then
        . /etc/os-release
        OS=$NAME
        VER=$VERSION_ID
    else
        print_error "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É"
        exit 1
    fi
    print_status "–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –û–°: $OS $VER"
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
install_system_deps() {
    print_status "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    
    if [[ $OS == *"Ubuntu"* ]] || [[ $OS == *"Debian"* ]]; then
        apt update && apt upgrade -y
        apt install -y python3 python3-pip python3-venv git curl wget
        apt install -y build-essential python3-dev
        apt install -y postgresql-client
        apt install -y nano htop unzip
    elif [[ $OS == *"CentOS"* ]] || [[ $OS == *"Red Hat"* ]]; then
        yum update -y
        yum install -y python3 python3-pip python3-venv git curl wget
        yum groupinstall -y "Development Tools"
        yum install -y python3-devel
        yum install -y nano htop unzip
    else
        print_error "–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–∞—è –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞: $OS"
        exit 1
    fi
    
    print_success "–°–∏—Å—Ç–µ–º–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
}

# –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
create_user() {
    print_status "–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è solarbalance..."
    
    if id "solarbalance" &>/dev/null; then
        print_warning "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å solarbalance —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    else
        useradd -m -s /bin/bash solarbalance
        print_success "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å solarbalance —Å–æ–∑–¥–∞–Ω"
    fi
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ UV
install_uv() {
    print_status "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ UV (–±—ã—Å—Ç—Ä—ã–π –ø–∞–∫–µ—Ç–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä)..."
    
    su - solarbalance -c "curl -LsSf https://astral.sh/uv/install.sh | sh"
    su - solarbalance -c "source ~/.bashrc"
    
    print_success "UV —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
}

# –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
clone_repository() {
    print_status "–ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..."
    
    read -p "–í–≤–µ–¥–∏—Ç–µ URL –≤–∞—à–µ–≥–æ Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è: " REPO_URL
    
    if [[ -z "$REPO_URL" ]]; then
        print_error "URL —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º"
        exit 1
    fi
    
    su - solarbalance -c "
        cd /home/solarbalance
        if [[ -d solarbalance-bot ]]; then
            rm -rf solarbalance-bot
        fi
        git clone $REPO_URL solarbalance-bot
    "
    
    print_success "–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω"
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Python –æ–∫—Ä—É–∂–µ–Ω–∏—è
setup_python_env() {
    print_status "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Python –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    
    su - solarbalance -c "
        cd /home/solarbalance/solarbalance-bot
        python3 -m venv venv
        source venv/bin/activate
        pip install --upgrade pip
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
        if command -v uv &> /dev/null; then
            uv pip install -e .
        else
            pip install -e .
        fi
    "
    
    print_success "Python –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ"
}

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
setup_config() {
    print_status "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
    
    su - solarbalance -c "
        cd /home/solarbalance/solarbalance-bot
        
        # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
        mkdir -p logs assets
        chmod 755 logs assets
        
        # –ö–æ–ø–∏—Ä—É–µ–º –ø—Ä–∏–º–µ—Ä –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        cp env.example .env
        chmod 600 .env
    "
    
    print_warning "–í–ê–ñ–ù–û: –ù–µ –∑–∞–±—É–¥—å—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª .env!"
    print_warning "–ü—É—Ç—å –∫ —Ñ–∞–π–ª—É: /home/solarbalance/solarbalance-bot/.env"
    print_warning "–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–∫–∞–∂–∏—Ç–µ:"
    print_warning "  - BOT_TOKEN (–ø–æ–ª—É—á–∏—Ç–µ —É @BotFather)"
    print_warning "  - AI_API (–∫–ª—é—á Bothub –∏–ª–∏ OpenAI)"
    print_warning "  - ADMIN_IDS (–≤–∞—à Telegram ID)"
    
    print_success "–ë–∞–∑–æ–≤–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞"
}

# –°–æ–∑–¥–∞–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–∞
create_systemd_service() {
    print_status "–°–æ–∑–¥–∞–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–∞..."
    
    cat > /etc/systemd/system/solarbalance.service << 'EOF'
[Unit]
Description=SolarBalance Astrology Telegram Bot
After=network.target postgresql.service
Wants=network.target

[Service]
Type=simple
User=solarbalance
Group=solarbalance
WorkingDirectory=/home/solarbalance/solarbalance-bot
Environment=PATH=/home/solarbalance/solarbalance-bot/venv/bin
ExecStart=/home/solarbalance/solarbalance-bot/venv/bin/python main_simple.py
ExecReload=/bin/kill -HUP $MAINPID
Restart=always
RestartSec=10

# –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
NoNewPrivileges=true
PrivateTmp=true
ProtectSystem=strict
ProtectHome=true
ReadWritePaths=/home/solarbalance/solarbalance-bot

# –õ–æ–≥–∏
StandardOutput=append:/home/solarbalance/solarbalance-bot/logs/systemd.log
StandardError=append:/home/solarbalance/solarbalance-bot/logs/systemd.log

[Install]
WantedBy=multi-user.target
EOF
    
    systemctl daemon-reload
    systemctl enable solarbalance
    
    print_success "Systemd —Å–µ—Ä–≤–∏—Å —Å–æ–∑–¥–∞–Ω –∏ –≤–∫–ª—é—á–µ–Ω"
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–∞–π—Ä–≤–æ–ª–∞
setup_firewall() {
    print_status "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–∞–π—Ä–≤–æ–ª–∞..."
    
    if command -v ufw &> /dev/null; then
        ufw --force enable
        ufw allow ssh
        print_success "–§–∞–π—Ä–≤–æ–ª –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
    else
        print_warning "UFW –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É —Ñ–∞–π—Ä–≤–æ–ª–∞"
    fi
}

# –°–æ–∑–¥–∞–Ω–∏–µ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤
create_helper_scripts() {
    print_status "–°–æ–∑–¥–∞–Ω–∏–µ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤..."
    
    # –°–∫—Ä–∏–ø—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    cat > /home/solarbalance/solarbalance-bot/update_bot.sh << 'EOF'
#!/bin/bash
set -e

echo "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ SolarBalance..."

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–æ—Ç–∞
sudo systemctl stop solarbalance

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
cd /home/solarbalance/solarbalance-bot

# –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º venv
source venv/bin/activate

# –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
git pull origin main

# –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
if command -v uv &> /dev/null; then
    uv pip install -e .
else
    pip install -e .
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏ –ë–î (–µ—Å–ª–∏ –µ—Å—Ç—å)
python -c "from database_async import async_db_manager; import asyncio; asyncio.run(async_db_manager.init_db())" || true

# –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
sudo systemctl start solarbalance

echo "‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo "üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–∞:"
sudo systemctl status solarbalance --no-pager
EOF

    # –°–∫—Ä–∏–ø—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
    cat > /home/solarbalance/solarbalance-bot/monitor.sh << 'EOF'
#!/bin/bash

echo "üìä SolarBalance Bot Status"
echo "========================="

# –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–∞
echo "üîß Service Status:"
systemctl is-active solarbalance || echo "inactive"

# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤
echo -e "\nüíª Resource Usage:"
ps aux | grep python | grep solarbalance | awk '{print "CPU: " $3 "%, RAM: " $4 "%, PID: " $2}' || echo "Process not found"

# –†–∞–∑–º–µ—Ä –ª–æ–≥–æ–≤
echo -e "\nüìù Log Files:"
du -sh logs/ 2>/dev/null || echo "No logs directory"

# –†–∞–∑–º–µ—Ä –ë–î
echo -e "\nüóÑÔ∏è Database:"
if [ -f "solarbalance.db" ]; then
    du -sh solarbalance.db
else
    echo "Database file not found"
fi

# –ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—à–∏–±–∫–∏
echo -e "\n‚ùå Recent Errors:"
journalctl -u solarbalance --since "1 hour ago" 2>/dev/null | grep -i error | tail -5 || echo "No recent errors"
EOF

    # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–ø—Ç—ã –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–º–∏
    chmod +x /home/solarbalance/solarbalance-bot/update_bot.sh
    chmod +x /home/solarbalance/solarbalance-bot/monitor.sh
    chown solarbalance:solarbalance /home/solarbalance/solarbalance-bot/update_bot.sh
    chown solarbalance:solarbalance /home/solarbalance/solarbalance-bot/monitor.sh
    
    print_success "–í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Å–∫—Ä–∏–ø—Ç—ã —Å–æ–∑–¥–∞–Ω—ã"
}

# –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
final_check() {
    print_status "–ü—Ä–æ–≤–µ–¥–µ–Ω–∏–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ —Ñ–∞–π–ª—ã –Ω–∞ –º–µ—Å—Ç–µ
    if [[ ! -f /home/solarbalance/solarbalance-bot/main_simple.py ]]; then
        print_error "–§–∞–π–ª main_simple.py –Ω–µ –Ω–∞–π–¥–µ–Ω!"
        exit 1
    fi
    
    if [[ ! -f /home/solarbalance/solarbalance-bot/.env ]]; then
        print_error "–§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω!"
        exit 1
    fi
    
    print_success "–í—Å–µ —Ñ–∞–π–ª—ã –Ω–∞ –º–µ—Å—Ç–µ"
}

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo -e "${BLUE}"
    echo "üöÄ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ SolarBalance"
    echo "========================================"
    echo -e "${NC}"
    
    check_sudo
    detect_os
    install_system_deps
    create_user
    install_uv
    clone_repository
    setup_python_env
    setup_config
    create_systemd_service
    setup_firewall
    create_helper_scripts
    final_check
    
    echo -e "${GREEN}"
    echo "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"
    echo "==============================="
    echo -e "${NC}"
    
    print_warning "–°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:"
    echo "1. –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:"
    echo "   nano /home/solarbalance/solarbalance-bot/.env"
    echo ""
    echo "2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞:"
    echo "   systemctl start solarbalance"
    echo ""
    echo "3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å:"
    echo "   systemctl status solarbalance"
    echo ""
    echo "4. –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –ª–æ–≥–∏:"
    echo "   journalctl -u solarbalance -f"
    echo ""
    echo "üìö –ü–æ–ª–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: deploy_server.md"
    echo "üîß –°–∫—Ä–∏–ø—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞: /home/solarbalance/solarbalance-bot/monitor.sh"
    echo "üîÑ –°–∫—Ä–∏–ø—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: /home/solarbalance/solarbalance-bot/update_bot.sh"
}

# –ó–∞–ø—É—Å–∫
main "$@" 