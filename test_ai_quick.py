"""–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç AI —Å –∫–æ—Ä–æ—Ç–∫–∏–º–∏ —Ç–∞–π–º–∞—É—Ç–∞–º–∏"""
import asyncio
import logging
from services.ai_predictions import AIPredictionService
from models import PlanetPosition

# –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO, format='%(levelname)s: %(message)s')

async def test():
    print("üöÄ –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç AI (8 —Å–µ–∫ —Ç–∞–π–º–∞—É—Ç)...")
    
    service = AIPredictionService()
    planets = {"–°–æ–ª–Ω—Ü–µ": PlanetPosition(sign="–õ–µ–≤", degree=15.0)}
    
    print("üîÆ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø—Ä–æ–≥–Ω–æ–∑...")
    
    try:
        result = await asyncio.wait_for(
            service.generate_prediction(planets, "—Å–µ–≥–æ–¥–Ω—è"),
            timeout=12  # –û–±—â–∏–π —Ç–∞–π–º–∞—É—Ç –Ω–∞ –≤–µ—Å—å –ø—Ä–æ—Ü–µ—Å—Å
        )
        
        print("\n‚úÖ –†–ï–ó–£–õ–¨–¢–ê–¢:")
        print("-" * 40)
        print(result[:200] + "..." if len(result) > 200 else result)
        print("-" * 40)
        
        if "‚ú® –°–æ–∑–¥–∞–Ω–æ —Å –ø–æ–º–æ—â—å—é –∞—Å—Ç—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –ò–ò" in result:
            print("üéâ AI –†–ê–ë–û–¢–ê–ï–¢!")
        else:
            print("‚ö†Ô∏è Fallback —Ä–µ–∂–∏–º")
            
    except asyncio.TimeoutError:
        print("‚ùå –û–±—â–∏–π —Ç–∞–π–º–∞—É—Ç - AI —Å–ª–∏—à–∫–æ–º –º–µ–¥–ª–µ–Ω–Ω—ã–π")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    asyncio.run(test()) 