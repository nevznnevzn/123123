import logging
from datetime import datetime

from aiogram import F, Router
from aiogram.fsm.context import FSMContext
from aiogram.types import CallbackQuery, Message

from database import db_manager
from keyboards import Keyboards
from services.subscription_service import SubscriptionService

logger = logging.getLogger(__name__)

router = Router()

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å –ø–æ–¥–ø–∏—Å–æ–∫
subscription_service = SubscriptionService()


@router.message(F.text.in_(["/subscription", "üíé –ü–æ–¥–ø–∏—Å–∫–∞"]))
async def subscription_menu_handler(message: Message, state: FSMContext):
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–æ–π"""
    await state.clear()
    user_id = message.from_user.id
    
    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    subscription_status = subscription_service.get_user_subscription_status(user_id)
    is_premium = subscription_status.get("is_premium", False)
    days_remaining = subscription_status.get("days_remaining")
    
    if is_premium:
        if days_remaining is not None:
            title = f"üíé <b>Premium –ø–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞</b>\n‚è∞ –û—Å—Ç–∞–ª–æ—Å—å –¥–Ω–µ–π: {days_remaining}"
        else:
            title = "üíé <b>Premium –ø–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞</b>\n‚ôæÔ∏è –ë–µ—Å—Å—Ä–æ—á–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞"
    else:
        title = "üíé <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–æ–π</b>\n\nüÜì –£ –≤–∞—Å –±–µ—Å–ø–ª–∞—Ç–Ω–∞—è –≤–µ—Ä—Å–∏—è"
    
    await message.answer(
        title,
        reply_markup=Keyboards.subscription_menu(is_premium, days_remaining)
    )


@router.callback_query(F.data == "subscription_back")
async def subscription_back_handler(callback: CallbackQuery, state: FSMContext):
    """–í–æ–∑–≤—Ä–∞—Ç –≤ –º–µ–Ω—é –ø–æ–¥–ø–∏—Å–∫–∏"""
    user_id = callback.from_user.id
    
    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    subscription_status = subscription_service.get_user_subscription_status(user_id)
    is_premium = subscription_status.get("is_premium", False)
    days_remaining = subscription_status.get("days_remaining")
    
    if is_premium:
        if days_remaining is not None:
            title = f"üíé <b>Premium –ø–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞</b>\n‚è∞ –û—Å—Ç–∞–ª–æ—Å—å –¥–Ω–µ–π: {days_remaining}"
        else:
            title = "üíé <b>Premium –ø–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞</b>\n‚ôæÔ∏è –ë–µ—Å—Å—Ä–æ—á–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞"
    else:
        title = "üíé <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–æ–π</b>\n\nüÜì –£ –≤–∞—Å –±–µ—Å–ø–ª–∞—Ç–Ω–∞—è –≤–µ—Ä—Å–∏—è"
    
    await callback.message.edit_text(
        title,
        reply_markup=Keyboards.subscription_menu(is_premium, days_remaining)
    )
    await callback.answer()


@router.callback_query(F.data == "subscription_status")
async def subscription_status_handler(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω—ã–π —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏"""
    user_id = callback.from_user.id
    
    subscription_status = subscription_service.get_user_subscription_status(user_id)
    is_premium = subscription_status.get("is_premium", False)
    
    if is_premium:
        days_remaining = subscription_status.get("days_remaining")
        status_text = subscription_service.get_subscription_status_text(user_id)
        
        text = f"""
üìä <b>–°—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏</b>

{status_text}

üåü <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:</b>
‚Ä¢ ü™ê –ü–æ–ª–Ω–∞—è –Ω–∞—Ç–∞–ª—å–Ω–∞—è –∫–∞—Ä—Ç–∞ (–≤—Å–µ –ø–ª–∞–Ω–µ—Ç—ã)
‚Ä¢ üîÆ –ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã
‚Ä¢ üåô –î–µ—Ç–∞–ª—å–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∏—Ç—ã
‚Ä¢ üìä –ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–µ –Ω–∞—Ç–∞–ª—å–Ω—ã–µ –∫–∞—Ä—Ç—ã
‚Ä¢ üèÜ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞
‚Ä¢ üéØ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏

‚ú® –°–ø–∞—Å–∏–±–æ –∑–∞ —Ç–æ, —á—Ç–æ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç–µ –Ω–∞—Å!
"""
    else:
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–ª—è –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        user_charts = db_manager.get_user_charts(user_id)
        charts_count = len(user_charts)
        max_charts = subscription_service.FREE_USER_LIMITS["natal_charts"]
        
        text = f"""
üìä <b>–°—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏</b>

üÜì <b>–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –≤–µ—Ä—Å–∏—è</b>

üìà <b>–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:</b>
‚Ä¢ üìä –ù–∞—Ç–∞–ª—å–Ω—ã–µ –∫–∞—Ä—Ç—ã: {charts_count}/{max_charts}
‚Ä¢ ü™ê –ü–ª–∞–Ω–µ—Ç—ã: —Ç–æ–ª—å–∫–æ –æ—Å–Ω–æ–≤–Ω—ã–µ (–°–æ–ª–Ω—Ü–µ, –õ—É–Ω–∞, –ê—Å—Ü–µ–Ω–¥–µ–Ω—Ç)
‚Ä¢ üîÆ –í–æ–ø—Ä–æ—Å—ã –≤ –¥–µ–Ω—å: 5

üí° <b>–•–æ—Ç–∏—Ç–µ –±–æ–ª—å—à–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π?</b>
–û—Ñ–æ—Ä–º–∏—Ç–µ Premium –ø–æ–¥–ø–∏—Å–∫—É –∏ –ø–æ–ª—É—á–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º!
"""
    
    await callback.message.edit_text(
        text.strip(),
        reply_markup=Keyboards.subscription_menu(is_premium)
    )
    await callback.answer()


@router.callback_query(F.data == "subscription_benefits")
async def subscription_benefits_handler(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ Premium –ø–æ–¥–ø–∏—Å–∫–∏"""
    text = """
üíé <b>–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ Premium –ø–æ–¥–ø–∏—Å–∫–∏</b>

üÜì <b>–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –≤–µ—Ä—Å–∏—è:</b>
‚Ä¢ 1 –Ω–∞—Ç–∞–ª—å–Ω–∞—è –∫–∞—Ä—Ç–∞
‚Ä¢ –¢–æ–ª—å–∫–æ –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–ª–∞–Ω–µ—Ç—ã (–°–æ–ª–Ω—Ü–µ, –õ—É–Ω–∞, –ê—Å—Ü–µ–Ω–¥–µ–Ω—Ç)
‚Ä¢ 5 –≤–æ–ø—Ä–æ—Å–æ–≤ –≤ –¥–µ–Ω—å

üíé <b>Premium –≤–µ—Ä—Å–∏—è:</b>
‚Ä¢ ‚ôæÔ∏è –ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–µ –Ω–∞—Ç–∞–ª—å–Ω—ã–µ –∫–∞—Ä—Ç—ã
‚Ä¢ ü™ê –í—Å–µ –ø–ª–∞–Ω–µ—Ç—ã –∏ –∞—Å–ø–µ–∫—Ç—ã (10+ –ø–ª–∞–Ω–µ—Ç)
‚Ä¢ üîÆ –ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –ó–≤—ë–∑–¥–Ω–æ–º—É —Å–æ–≤–µ—Ç—É
‚Ä¢ üåô –î–µ—Ç–∞–ª—å–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∏—Ç—ã –∏ –ø—Ä–æ–≥–Ω–æ–∑—ã
‚Ä¢ üìà –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å
‚Ä¢ üéØ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
‚Ä¢ üèÜ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤
‚Ä¢ üì± –†–∞–Ω–Ω–∏–π –¥–æ—Å—Ç—É–ø –∫ –Ω–æ–≤—ã–º —Ñ—É–Ω–∫—Ü–∏—è–º

üí∞ <b>–°—Ç–æ–∏–º–æ—Å—Ç—å:</b> –≤—Å–µ–≥–æ 499‚ÇΩ –≤ –º–µ—Å—è—Ü


"""
    
    await callback.message.edit_text(
        text.strip(),
        reply_markup=Keyboards.subscription_upgrade_options()
    )
    await callback.answer()


@router.callback_query(F.data == "subscription_upgrade")
async def subscription_upgrade_handler(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏"""
    text = subscription_service.get_subscription_offer_text(callback.from_user.id)
    
    await callback.message.edit_text(
        text,
        reply_markup=Keyboards.subscription_upgrade_options()
    )
    await callback.answer()


@router.callback_query(F.data == "buy_monthly")
async def buy_monthly_handler(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–∫—É–ø–∫–∏ –º–µ—Å—è—á–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏"""
    # TODO: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –ø–ª–∞—Ç—ë–∂–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π (–ÆKassa, Stripe –∏ —Ç.–¥.)
    text = """
üí≥ <b>–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏</b>

üîÑ <b>–°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –ø–ª–∞—Ç–µ–∂–µ–π –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...</b>

–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –ø–æ–ø—É–ª—è—Ä–Ω—ã–º–∏ –ø–ª–∞—Ç—ë–∂–Ω—ã–º–∏ —Å–∏—Å—Ç–µ–º–∞–º–∏ (–ÆKassa, Stripe, –°–±–µ—Ä–ü–µ–π) –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –±–ª–∏–∂–∞–π—à–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è—Ö –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —É–¥–æ–±—Å—Ç–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.

üíé –ü–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–ª–∞—Ç—ë–∂–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –ø–æ–¥–ø–∏—Å–∫–∞ –±—É–¥–µ—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å—Å—è –º–≥–Ω–æ–≤–µ–Ω–Ω–æ!

üéÅ <b>–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ:</b>
–ü–µ—Ä–≤—ã–µ 100 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ–ª—É—á–∞—é—Ç —Å–∫–∏–¥–∫—É 50%!
–°—Ç–æ–∏–º–æ—Å—Ç—å: ~~499‚ÇΩ~~ ‚Üí <b>249‚ÇΩ</b> –≤ –º–µ—Å—è—Ü
"""
    
    await callback.message.edit_text(
        text.strip(),
        reply_markup=Keyboards.subscription_upgrade_options()
    )
    await callback.answer()



@router.callback_query(F.data == "subscription_faq")
async def subscription_faq_handler(callback: CallbackQuery):
    """–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã –æ –ø–æ–¥–ø–∏—Å–∫–µ"""
    text = """
‚ùì <b>–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã</b>

<b>Q: –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç Premium –ø–æ–¥–ø–∏—Å–∫–∞?</b>
A: –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º –Ω–∞ 30 –¥–Ω–µ–π.

<b>Q: –ú–æ–∂–Ω–æ –ª–∏ –æ—Ç–º–µ–Ω–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É?</b>
A: –î–∞, –≤—ã –º–æ–∂–µ—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç.

<b>Q: –ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø–æ—Å–ª–µ –æ—Ç–º–µ–Ω—ã?</b>
A: –í—ã –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è Premium –¥–æ –∫–æ–Ω—Ü–∞ –æ–ø–ª–∞—á–µ–Ω–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞.

<b>Q: –ö–æ–≥–¥–∞ –ø–æ—è–≤—è—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø–ª–∞—Ç–µ–∂–∏?</b>
A: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –ø–æ–ø—É–ª—è—Ä–Ω—ã–º–∏ –ø–ª–∞—Ç—ë–∂–Ω—ã–º–∏ —Å–∏—Å—Ç–µ–º–∞–º–∏ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç—Å—è –≤ –±–ª–∏–∂–∞–π—à–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è—Ö.

<b>Q: –ë–µ–∑–æ–ø–∞—Å–Ω—ã –ª–∏ –±—É–¥—É—Ç –ø–ª–∞—Ç–µ–∂–∏?</b>
A: –î–∞, –±—É–¥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ –ø–ª–∞—Ç—ë–∂–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã —Å —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ–º.

<b>Q: –ï—Å—Ç—å –ª–∏ —Å–∫–∏–¥–∫–∏?</b>
A: –ü–µ—Ä–≤—ã–µ 100 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ–ª—É—á–∞—é—Ç —Å–∫–∏–¥–∫—É 50%!
"""
    
    await callback.message.edit_text(
        text.strip(),
        reply_markup=Keyboards.subscription_upgrade_options()
    )
    await callback.answer()


@router.callback_query(F.data == "subscription_renew")
async def subscription_renew_handler(callback: CallbackQuery):
    """–ü—Ä–æ–¥–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏"""
    text = """
üîÑ <b>–ü—Ä–æ–¥–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏</b>

üíé –í–∞—à–∞ Premium –ø–æ–¥–ø–∏—Å–∫–∞ –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–æ–¥–ª–µ–Ω–∞ –ø—Ä–∏ –ø—Ä–∏–±–ª–∏–∂–µ–Ω–∏–∏ –∫ –æ–∫–æ–Ω—á–∞–Ω–∏—é.

üí≥ <b>–°–ø–æ—Å–æ–±—ã –ø—Ä–æ–¥–ª–µ–Ω–∏—è:</b>
‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–æ–¥–ª–µ–Ω–∏–µ (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)
‚Ä¢ –†—É—á–Ω–æ–µ –ø—Ä–æ–¥–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –ø–æ–¥–¥–µ—Ä–∂–∫—É

‚öôÔ∏è <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–≤—Ç–æ–ø—Ä–æ–¥–ª–µ–Ω–∏—è:</b>
–§—É–Ω–∫—Ü–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–æ–¥–ª–µ–Ω–∏—è –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤–º–µ—Å—Ç–µ —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π –ø–ª–∞—Ç—ë–∂–Ω—ã—Ö —Å–∏—Å—Ç–µ–º.

üîÑ <b>–ü–ª–∞–Ω–∏—Ä—É–µ–º—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:</b>
‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–ø—Ä–æ–¥–ª–µ–Ω–∏—è
‚Ä¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –∏—Å—Ç–µ—á–µ–Ω–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏
‚Ä¢ –ì–∏–±–∫–∏–µ —Ç–∞—Ä–∏—Ñ–Ω—ã–µ –ø–ª–∞–Ω—ã
"""
    
    await callback.message.edit_text(
        text.strip(),
        reply_markup=Keyboards.subscription_menu(is_premium=True)
    )
    await callback.answer()


@router.callback_query(F.data == "subscription_cancel")
async def subscription_cancel_handler(callback: CallbackQuery):
    """–ó–∞–ø—Ä–æ—Å –Ω–∞ –æ—Ç–º–µ–Ω—É –ø–æ–¥–ø–∏—Å–∫–∏"""
    text = """
üòî <b>–û—Ç–º–µ–Ω–∞ –ø–æ–¥–ø–∏—Å–∫–∏</b>

–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å Premium –ø–æ–¥–ø–∏—Å–∫—É?

‚ùó <b>–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ:</b>
‚Ä¢ –ü–æ–¥–ø–∏—Å–∫–∞ –±—É–¥–µ—Ç –æ—Ç–º–µ–Ω–µ–Ω–∞ —Å –∫–æ–Ω—Ü–∞ —Ç–µ–∫—É—â–µ–≥–æ –ø–µ—Ä–∏–æ–¥–∞
‚Ä¢ –í—ã —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ Premium –¥–æ –æ–∫–æ–Ω—á–∞–Ω–∏—è –æ–ø–ª–∞—á–µ–Ω–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
‚Ä¢ –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –æ—Å—Ç–∞–Ω—É—Ç—Å—è —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–º–∏

üíî <b>–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, –ø–æ—á–µ–º—É –≤—ã —É—Ö–æ–¥–∏—Ç–µ?</b>
–≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –Ω–∞–º —Å—Ç–∞—Ç—å –ª—É—á—à–µ.

üéÅ <b>–•–æ—Ç–∏—Ç–µ —Å–∫–∏–¥–∫—É?</b>
–°–≤—è–∂–∏—Ç–µ—Å—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π - –≤–æ–∑–º–æ–∂–Ω–æ, –º—ã –Ω–∞–π–¥—ë–º –∫–æ–º–ø—Ä–æ–º–∏—Å—Å!
"""
    
    await callback.message.edit_text(
        text.strip(),
        reply_markup=Keyboards.subscription_confirm_cancel()
    )
    await callback.answer()


@router.callback_query(F.data == "subscription_cancel_confirm")
async def subscription_cancel_confirm_handler(callback: CallbackQuery):
    """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ—Ç–º–µ–Ω—ã –ø–æ–¥–ø–∏—Å–∫–∏"""
    user_id = callback.from_user.id
    
    # –û—Ç–º–µ–Ω—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É
    success = subscription_service.cancel_subscription(user_id)
    
    if success:
        text = """
‚úÖ <b>–ü–æ–¥–ø–∏—Å–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞</b>

üòî –ù–∞–º –∂–∞–ª—å, —á—Ç–æ –≤—ã —É—Ö–æ–¥–∏—Ç–µ!

‚ÑπÔ∏è <b>–ß—Ç–æ –¥–∞–ª—å—à–µ:</b>
‚Ä¢ Premium –æ—Å—Ç–∞—ë—Ç—Å—è –∞–∫—Ç–∏–≤–Ω—ã–º –¥–æ –∫–æ–Ω—Ü–∞ –æ–ø–ª–∞—á–µ–Ω–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞
‚Ä¢ –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—Å—è –Ω–∞ –±–µ—Å–ø–ª–∞—Ç–Ω—É—é –≤–µ—Ä—Å–∏—é
‚Ä¢ –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω—è—Ç—Å—è

üéØ <b>–ú—ã —Å—Ç–∞—Ä–∞–µ–º—Å—è —Å—Ç–∞—Ç—å –ª—É—á—à–µ!</b>
–ï—Å–ª–∏ –ø–µ—Ä–µ–¥—É–º–∞–µ—Ç–µ - Premium –≤—Å–µ–≥–¥–∞ –º–æ–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å.

üíå <b>–í–∞—à–µ –º–Ω–µ–Ω–∏–µ –≤–∞–∂–Ω–æ!</b>
–ú—ã –ø–æ—Å—Ç–æ—è–Ω–Ω–æ —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ —É–ª—É—á—à–µ–Ω–∏–µ–º —Å–µ—Ä–≤–∏—Å–∞ –∏ —É—á–∏—Ç—ã–≤–∞–µ–º –ø–æ–∂–µ–ª–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.

üåü –°–ø–∞—Å–∏–±–æ, —á—Ç–æ –±—ã–ª–∏ —Å –Ω–∞–º–∏! –î–≤–µ—Ä–∏ –≤—Å–µ–≥–¥–∞ –æ—Ç–∫—Ä—ã—Ç—ã.
"""
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –º–µ–Ω—é –Ω–∞ –±–µ—Å–ø–ª–∞—Ç–Ω—É—é –≤–µ—Ä—Å–∏—é
        await callback.message.edit_text(
            text.strip(),
            reply_markup=Keyboards.subscription_menu(is_premium=False)
        )
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –æ—Ç–º–µ–Ω–∏–ª –ø–æ–¥–ø–∏—Å–∫—É")
    else:
        text = """
‚ùå <b>–û—à–∏–±–∫–∞ –æ—Ç–º–µ–Ω—ã –ø–æ–¥–ø–∏—Å–∫–∏</b>

–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ –ø–æ–¥–ø–∏—Å–∫–∏.

üîß <b>–ß—Ç–æ –¥–µ–ª–∞—Ç—å:</b>
‚Ä¢ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ
‚Ä¢ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /start

üòî –ü—Ä–∏–Ω–æ—Å–∏–º –∏–∑–≤–∏–Ω–µ–Ω–∏—è –∑–∞ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞!
"""
        await callback.message.edit_text(
            text.strip(),
            reply_markup=Keyboards.subscription_menu(is_premium=True)
        )
        logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–º–µ–Ω—ã –ø–æ–¥–ø–∏—Å–∫–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
    
    await callback.answer() 